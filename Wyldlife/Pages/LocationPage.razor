@page "/Location/{locationid:guid}"
@inject IJSRuntime jsRuntime
@using Wyldlife.Models
@inject Wyldlife.Services.LocationService locationservice
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>@locationservice.GetLocations().First(x => x.Id == locationid).Title </h3>
<p>Description</p>
<div>
    @locationservice.GetLocations().First(x => x.Id == locationid).Description
</div>
<br />
<p>Notes</p>
<div>
    @locationservice.GetLocations().First(x => x.Id == locationid).Notes
</div>
<br />

<button class="btn btn-primary" @onclick="OpenLocInMaps">Open Location in Google Maps</button>
<br />
<br />
@for (int i = 0; i < 5; i++)
{
    if (i < rating)
    {
        <span class="fa fa-star checked"></span>
    }
    else
    {
        <span class="fa fa-star"></span>
    }
}
<p>@numratings ratings</p>
<br />
<p>
    Posted By: @locationservice.GetLocations().First(x => x.Id == locationid).Author
</p>
<br />
@code {
    [Parameter]
    public Guid locationid { get; set; }
    public int numratings { get; set; }
    public string currentuser { get; set; }
    public int rating { get; set; }

    public async Task OpenLocInMaps()
    {
        string lat = locationservice.GetLocations().First(x => x.Id == locationid).Coords.Item1.ToString();
        string lon = locationservice.GetLocations().First(x => x.Id == locationid).Coords.Item2.ToString();
        string url = "https://www.google.com/maps/search/?api=1&query=" + lat + "," + lon;
        await jsRuntime.InvokeAsync<object>("open", url, "_blank");
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        rating = locationservice.GetRating(locationid).Item1;
        numratings = locationservice.GetRating(locationid).Item2;
    }

    private async Task GetCurrentUser()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        currentuser = user.Identity.Name;
    }
}
