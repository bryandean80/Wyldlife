@inject IJSRuntime jsRuntime
@using BrowserInterop.Extensions
@using BrowserInterop.Geolocation
@using Wyldlife.Models
@inject Wyldlife.Services.LocationService locationservice
@page "/AddLocation"
@inject NavigationManager NavManager


<h1>Add New Location</h1>

<p>Title</p>
<div class="input-group" style="width: 75%">
    <input class="form-control" @bind="title" />
</div>
<br />
<p>Coordinates (In Decimal)</p>
<div class="input-group form-inline" style="width: 75%">
    <span>Latitude: </span>
    <input class="form-control" @bind="latitude" />
    <span>Longitude: </span>
    <input class="form-control" @bind="longitude" />
    <button class="btn btn-primary" @onclick="GetLocation">Use Current Location</button>
</div>
<br />
<p>Description (Optional)</p>
<div class="input-group" style="width: 75%">
    <textarea style="width: 75%" class="form-control" @bind="description"></textarea>
</div>
<br />
<p>Notes (Optional)</p>
<div class="input-group" style="width: 75%">
    <textarea style="width: 75%" class="form-control" @bind="notes"></textarea>
</div>
<br />


<button class="btn btn-primary" @onclick="Submit">Submit</button>




@code {
    private int currentCount = 0;
    string title { get; set; }
    string description { get; set; }
    string notes { get; set; }
    public double latitude { get; set; }
    public double longitude { get; set; }
    Location location = new Location();


    private WindowNavigatorGeolocation geolocationWrapper;
    private GeolocationPosition currentPosition;

    protected override async Task OnInitializedAsync()
    {
        var window = await jsRuntime.Window();
        var navigator = await window.Navigator();
        geolocationWrapper = navigator.Geolocation;
    }

    public async Task GetLocation()
    {
        currentPosition = (await geolocationWrapper.GetCurrentPosition(new PositionOptions()
        {
            EnableHighAccuracy = true,
            MaximumAgeTimeSpan = TimeSpan.FromHours(1),
            TimeoutTimeSpan = TimeSpan.FromMinutes(1)

        })).Location;
        latitude = currentPosition.Coords.Latitude;
        longitude = currentPosition.Coords.Longitude;
    }

    private void Submit()
    {
        location.Title = title;
        location.Id = Guid.NewGuid();
        location.Coords = Tuple.Create(latitude, longitude);
        location.Description = description;
        location.Notes = notes;

        locationservice.AddLocation(location);

        description = string.Empty;
        title = string.Empty;
        notes = string.Empty;
        latitude = 0.0;
        longitude = 0.0;
        NavManager.NavigateTo("/Location/" + location.Id.ToString());
    }


}
